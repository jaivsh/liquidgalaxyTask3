com.google.mlkit.common.internal.MlKitComponentDiscoveryService
android.support.v4.app.RemoteActionCompatParcelizer
androidx.preference.SeekBarPreference
androidx.camera.core.internal.compat.quirk.SurfaceOrderQuirk
androidx.camera.camera2.internal.compat.quirk.StillCaptureFlashStopRepeatingQuirk
androidx.appcompat.widget.SearchView
androidx.camera.video.internal.compat.quirk.AudioEncoderIgnoresInputTimestampQuirk
androidx.recyclerview.widget.GridLayoutManager
androidx.preference.DropDownPreference
androidx.camera.video.internal.compat.quirk.CodecStuckOnFlushQuirk
androidx.camera.core.internal.compat.quirk.CaptureFailedRetryQuirk
androidx.work.impl.workers.CombineContinuationsWorker
android.support.v4.media.AudioAttributesImplApi21Parcelizer
androidx.work.WorkManagerInitializer
androidx.work.ListenableWorker
androidx.camera.core.ImageProcessingUtil
androidx.room.MultiInstanceInvalidationService
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhq
com.google.android.gms.common.api.Scope
androidx.profileinstaller.ProfileInstallReceiver
androidx.camera.video.internal.compat.quirk.ReportedVideoQualityNotSupportedQuirk
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.camera.camera2.Camera2Config$DefaultProvider
androidx.camera.camera2.internal.compat.quirk.FlashAvailabilityBufferUnderflowQuirk
androidx.camera.camera2.internal.compat.quirk.CameraNoResponseWhenEnablingFlashQuirk
androidx.camera.camera2.internal.compat.quirk.LegacyCameraOutputConfigNullPointerQuirk
androidx.camera.camera2.internal.compat.quirk.CrashWhenTakingPhotoWithAutoFlashAEModeQuirk
androidx.work.multiprocess.RemoteWorkManagerClient
androidx.preference.SwitchPreference
androidx.media.AudioAttributesImplApi26
androidx.work.CoroutineWorker
com.google.android.gms.common.GooglePlayServicesManifestException
androidx.work.ArrayCreatingInputMerger
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback
androidx.camera.video.internal.compat.quirk.EncoderNotUsePersistentInputSurfaceQuirk
androidx.preference.SwitchPreferenceCompat
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.work.multiprocess.RemoteListenableWorker
android.support.v4.media.session.ParcelableVolumeInfo
androidx.camera.core.internal.compat.quirk.LargeJpegImageQuirk
androidx.camera.camera2.internal.compat.quirk.ImageCaptureWashedOutImageQuirk
androidx.camera.camera2.internal.compat.quirk.ImageCaptureFlashNotFireQuirk
io.flutter.view.TextureRegistry$SurfaceTextureEntry
androidx.preference.PreferenceCategory
androidx.work.OverwritingInputMerger
androidx.camera.video.internal.compat.quirk.StretchedVideoResolutionQuirk
com.example.lgtask3.lgtask3.MainActivity
io.flutter.plugins.urllauncher.WebViewActivity
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
androidx.work.impl.workers.ConstraintTrackingWorker
com.google.mlkit.vision.common.internal.VisionCommonRegistrar
com.google.maps.android.ui.RotationLayout
androidx.preference.ListPreference
com.google.android.gms.common.api.GoogleApiActivity
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer
androidx.appcompat.widget.ContentFrameLayout
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
com.google.mlkit.vision.mediapipe.utils.ImageConvertNativeUtils
androidx.preference.CheckBoxPreference
androidx.work.WorkerParameters
com.google.android.gms.common.SupportErrorDialogFragment
io.flutter.plugins.googlemaps.GoogleMapsPlugin
androidx.transition.FragmentTransitionSupport
androidx.camera.camera2.internal.compat.quirk.ImageCaptureFailedForVideoSnapshotQuirk
androidx.camera.camera2.internal.compat.quirk.CaptureSessionOnClosedNotCalledQuirk
kotlinx.coroutines.internal.StackTraceRecoveryKt
androidx.camera.video.internal.compat.quirk.ExcludeStretchedVideoQualityQuirk
androidx.appcompat.widget.ActionBarContainer
androidx.camera.camera2.internal.compat.quirk.TextureViewIsClosedQuirk
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback
io.flutter.view.AccessibilityViewEmbedder
androidx.work.impl.background.systemjob.SystemJobService
androidx.appcompat.widget.ActionBarContextView
androidx.media.AudioAttributesImplApi26Parcelizer
androidx.core.app.RemoteActionCompat
androidx.camera.camera2.internal.compat.quirk.ExtraSupportedOutputSizeQuirk
com.google.research.xeno.effect.AssetRegistry
androidx.appcompat.widget.ActionMenuView
androidx.appcompat.widget.AlertDialogLayout
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements
androidx.camera.camera2.internal.compat.quirk.YuvImageOnePixelShiftQuirk
androidx.appcompat.view.menu.ActionMenuItemView
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
io.flutter.view.TextureRegistry$ImageConsumer
com.google.android.gms.common.api.Status
com.google.mlkit.vision.pose.internal.PoseMiniBenchmarkWorker
com.google_mlkit_pose_detection.GoogleMlKitPoseDetectionPlugin
androidx.camera.core.impl.MetadataHolderService
androidx.camera.video.internal.compat.quirk.MediaFormatMustNotUseFrameRateToFindEncoderQuirk
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhr
androidx.camera.camera2.internal.compat.quirk.LegacyCameraSurfaceCleanupQuirk
androidx.camera.camera2.internal.compat.quirk.PreviewOrientationIncorrectQuirk
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.camera.camera2.internal.compat.quirk.UseTorchAsFlashQuirk
androidx.preference.PreferenceScreen
androidx.preference.DialogPreference
androidx.lifecycle.DefaultLifecycleObserver
androidx.camera.core.internal.compat.quirk.IncorrectJpegMetadataQuirk
androidx.work.Worker
android.support.v4.media.session.MediaSessionCompat$QueueItem
androidx.versionedparcelable.CustomVersionedParcelable
androidx.camera.camera2.internal.compat.quirk.AspectRatioLegacyApi21Quirk
com.google.mlkit.vision.pose.internal.PoseRegistrar
androidx.camera.camera2.internal.compat.quirk.AutoFlashUnderExposedQuirk
androidx.appcompat.widget.FitWindowsFrameLayout
android.support.v4.media.MediaMetadataCompat
io.flutter.plugins.camerax.CameraAndroidCameraxPlugin
com.google.android.gms.common.api.internal.BasePendingResult
androidx.camera.video.internal.compat.quirk.AudioTimestampFramePositionIncorrectQuirk
androidx.camera.camera2.internal.compat.quirk.ConfigureSurfaceToSecondarySessionFailQuirk
androidx.preference.internal.PreferenceImageView
com.google.android.gms.maps.model.LatLngBounds
androidx.work.impl.background.systemalarm.RescheduleReceiver
com.google.research.xeno.effect.AssetRegistryService
androidx.media.AudioAttributesImplApi21Parcelizer
androidx.media.AudioAttributesCompat
androidx.media.AudioAttributesImplBase
androidx.camera.camera2.internal.compat.quirk.JpegHalCorruptImageQuirk
com.ryanheise.audio_session.AudioSessionPlugin
androidx.annotation.Keep
com.google.android.gms.common.api.internal.zzd
androidx.camera.camera2.internal.compat.quirk.CaptureIntentPreviewQuirk
android.support.v4.media.AudioAttributesCompatParcelizer
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin
androidx.work.impl.WorkDatabase
androidx.camera.video.internal.compat.quirk.SizeCannotEncodeVideoQuirk
androidx.camera.camera2.internal.compat.quirk.CaptureSessionStuckQuirk
com.ryanheise.just_audio.JustAudioPlugin
androidx.camera.camera2.internal.compat.quirk.RepeatingStreamConstraintForVideoRecordingQuirk
androidx.camera.video.internal.compat.quirk.CameraUseInconsistentTimebaseQuirk
androidx.work.multiprocess.RemoteWorkManagerService
androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhw
androidx.camera.camera2.internal.compat.quirk.ZslDisablerQuirk
androidx.camera.camera2.internal.compat.quirk.PreviewDelayWhenVideoCaptureIsBoundQuirk
androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk
androidx.versionedparcelable.ParcelImpl
androidx.camera.camera2.internal.compat.quirk.Nexus4AndroidLTargetAspectRatioQuirk
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
android.support.v4.media.RatingCompat
androidx.lifecycle.ProcessLifecycleInitializer
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhu
androidx.emoji2.text.EmojiCompatInitializer
androidx.core.app.CoreComponentFactory
androidx.camera.video.internal.compat.quirk.StopCodecAfterSurfaceRemovalCrashMediaServerQuirk
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx
androidx.camera.video.internal.compat.quirk.NegativeLatLongSavesIncorrectlyQuirk
androidx.camera.core.internal.compat.quirk.SoftwareJpegEncodingPreferredQuirk
androidx.preference.MultiSelectListPreference
io.flutter.plugin.platform.SingleViewPresentation
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
androidx.appcompat.widget.SwitchCompat
android.support.v4.media.session.MediaSessionCompat$Token
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin
androidx.camera.camera2.internal.compat.quirk.SmallDisplaySizeQuirk
androidx.media.AudioAttributesImplBaseParcelizer
androidx.work.multiprocess.RemoteCoroutineWorker
androidx.camera.core.internal.compat.quirk.ImageCaptureRotationOptionQuirk
androidx.camera.camera2.internal.compat.quirk.AfRegionFlipHorizontallyQuirk
androidx.work.impl.WorkDatabase_Impl
androidx.camera.camera2.internal.compat.quirk.Preview3AThreadCrashQuirk
com.google.mlkit.common.internal.MlKitInitProvider
androidx.core.widget.NestedScrollView
androidx.media.AudioAttributesImpl
androidx.appcompat.app.AlertController$RecycleListView
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhz
androidx.window.extensions.core.util.function.Predicate
androidx.fragment.app.DialogFragment
androidx.camera.camera2.internal.compat.quirk.ImageCaptureFailedWhenVideoCaptureIsBoundQuirk
androidx.startup.InitializationProvider
com.google.android.gms.maps.GoogleMapOptions
androidx.camera.core.impl.utils.SurfaceUtil
androidx.camera.camera2.internal.compat.quirk.TorchIsClosedAfterImageCapturingQuirk
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
androidx.preference.TwoStatePreference
android.support.v4.media.session.PlaybackStateCompat
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv
android.support.v4.media.MediaBrowserCompat$ItemReceiver
androidx.core.graphics.drawable.IconCompat
io.flutter.plugins.imagepicker.ImagePickerPlugin
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
androidx.camera.video.internal.compat.quirk.MediaCodecInfoReportIncorrectInfoQuirk
androidx.appcompat.widget.FitWindowsLinearLayout
io.flutter.plugin.text.ProcessTextPlugin
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
androidx.camera.camera2.internal.compat.quirk.CaptureNoResponseQuirk
android.support.v4.media.MediaDescriptionCompat
androidx.window.extensions.core.util.function.Function
androidx.media3.exoplayer.dash.DashMediaSource$Factory
com.csdcorp.speech_to_text.SpeechToTextPlugin
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
androidx.camera.camera2.internal.compat.quirk.TemporalNoiseQuirk
com.google.mlkit.acceleration.internal.MiniBenchmarkWorker
androidx.camera.video.internal.compat.quirk.SignalEosOutputBufferNotComeQuirk
androidx.media.AudioAttributesCompatParcelizer
androidx.work.impl.foreground.SystemForegroundService
androidx.camera.video.internal.compat.quirk.DeactivateEncoderSurfaceBeforeStopEncoderQuirk
androidx.window.extensions.core.util.function.Consumer
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhk
com.google.android.gms.common.api.internal.LifecycleCallback
io.flutter.view.TextureRegistry$SurfaceProducer
androidx.appcompat.view.menu.ListMenuItemView
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
androidx.appcompat.widget.ViewStubCompat
androidx.media3.exoplayer.hls.HlsMediaSource$Factory
com.google_mlkit_commons.GoogleMlKitCommonsPlugin
androidx.camera.camera2.internal.compat.quirk.JpegCaptureDownsizingQuirk
io.flutter.plugins.GeneratedPluginRegistrant
com.google.android.gms.maps.model.LatLng
androidx.camera.camera2.internal.compat.quirk.ImageCaptureWithFlashUnderexposureQuirk
androidx.camera.camera2.internal.compat.quirk.PreviewStretchWhenVideoCaptureIsBoundQuirk
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements
androidx.appcompat.view.menu.ExpandedMenuView
androidx.appcompat.widget.DialogTitle
androidx.recyclerview.widget.RecyclerView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.google.android.gms.common.annotation.KeepName
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy
androidx.work.impl.diagnostics.DiagnosticsReceiver
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.camera.camera2.internal.compat.quirk.TorchFlashRequiredFor3aUpdateQuirk
androidx.camera.video.internal.compat.quirk.VideoQualityQuirk
androidx.camera.camera2.internal.compat.quirk.PreviewPixelHDRnetQuirk
androidx.preference.UnPressableLinearLayout
androidx.preference.EditTextPreference
androidx.camera.core.internal.compat.quirk.SurfaceProcessingQuirk
androidx.work.impl.workers.DiagnosticsWorker
androidx.camera.camera2.internal.compat.quirk.InvalidVideoProfilesQuirk
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
io.flutter.view.FlutterCallbackInformation
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements
com.google.mlkit.acceleration.internal.MlKitRemoteWorkerService
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.camera.video.internal.compat.quirk.ExtraSupportedQualityQuirk
androidx.camera.video.internal.compat.quirk.VideoEncoderCrashQuirk
androidx.camera.camera2.internal.compat.quirk.FlashTooSlowQuirk
com.google.android.datatransport.cct.CctBackendFactory
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
androidx.work.impl.background.systemalarm.SystemAlarmService
com.google.android.gms.maps.model.CameraPosition
androidx.camera.video.internal.compat.quirk.VideoEncoderSuspendDoesNotIncludeSuspendTimeQuirk
androidx.camera.camera2.internal.compat.quirk.ImageCapturePixelHDRPlusQuirk
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.google.android.gms.common.util.DynamiteApi
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhl
io.flutter.embedding.engine.FlutterJNI
io.flutter.plugins.urllauncher.UrlLauncherPlugin
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.recyclerview.widget.LinearLayoutManager
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.recyclerview.widget.StaggeredGridLayoutManager
io.flutter.view.TextureRegistry$ImageTextureEntry
androidx.browser.browseractions.BrowserActionsFallbackMenuView
com.google.android.gms.common.internal.ReflectedParcelable
androidx.camera.video.internal.compat.quirk.MediaStoreVideoCannotWrite
com.google.mlkit.common.internal.CommonComponentRegistrar
androidx.camera.camera2.internal.compat.quirk.CaptureSessionShouldUseMrirQuirk
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.appcompat.widget.ButtonBarLayout
io.flutter.plugins.imagepicker.ImagePickerFileProvider
androidx.camera.camera2.internal.compat.quirk.IncorrectCaptureStateQuirk
io.flutter.view.TextureRegistry$GLTextureConsumer
com.google.android.gms.auth.api.signin.GoogleSignInAccount
io.flutter.plugins.pathprovider.PathProviderPlugin
androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk
androidx.preference.PreferenceGroup
android.support.v4.media.AudioAttributesImplBaseParcelizer
android.support.v4.media.AudioAttributesImplApi26Parcelizer
androidx.camera.core.internal.compat.quirk.LowMemoryQuirk
androidx.camera.camera2.internal.compat.quirk.ImageCaptureFailWithAutoFlashQuirk
androidx.media.AudioAttributesImplApi21
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
androidx.camera.camera2.internal.compat.quirk.AeFpsRangeLegacyQuirk
androidx.camera.camera2.internal.compat.quirk.ExcludedSupportedSizesQuirk
androidx.core.app.RemoteActionCompatParcelizer
androidx.profileinstaller.ProfileInstallerInitializer
androidx.appcompat.widget.Toolbar
io.flutter.plugins.sharedpreferences.LegacySharedPreferencesPlugin
androidx.camera.video.internal.compat.quirk.ExtraSupportedResolutionQuirk
com.google.android.gms.internal.mlkit_vision_mediapipe.zzib
androidx.preference.Preference
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements
androidx.camera.core.internal.compat.quirk.OnePixelShiftQuirk
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: boolean zzg
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: long zza
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.android.gms.internal.mlkit_acceleration.zzhh: com.google.android.gms.internal.mlkit_acceleration.zzea zzd
com.google.android.gms.maps.model.MapStyleOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedHeight
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
androidx.media3.extractor.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
androidx.media3.extractor.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.work.multiprocess.parcelable.ParcelableWorkRequest: android.os.Parcelable$Creator CREATOR
com.google.mlkit.acceleration.internal.zzq: java.lang.String zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: long zzj
androidx.media3.extractor.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.MapFieldLite preferences_
androidx.media3.extractor.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: boolean zze
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.work.multiprocess.parcelable.ParcelableWorkInfos: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzhk: com.google.android.gms.internal.mlkit_acceleration.zzhk zzb
androidx.media3.extractor.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzes: boolean zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfc: int zzd
androidx.media3.extractor.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgr: java.lang.String zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzga zzj
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: com.google.android.gms.internal.mlkit_vision_mediapipe.zzes zzn
androidx.datastore.preferences.PreferencesProto$Value: int BYTES_FIELD_NUMBER
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzh
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfb: int zze
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzhn: java.lang.String zzf
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: int zzl
com.google.android.gms.internal.mlkit_acceleration.zzhk: com.google.android.gms.internal.mlkit_acceleration.zzea zzf
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int UNINITIALIZED_SERIALIZED_SIZE
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
com.google.android.gms.internal.mlkit_acceleration.zzha: boolean zzh
com.google.android.gms.internal.mlkit_acceleration.zzaj$zzk: java.lang.Thread thread
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfk: com.google.android.gms.internal.mlkit_vision_mediapipe.zzfk zzb
androidx.media3.extractor.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
androidx.media3.extractor.metadata.mp4.SlowMotionData: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzg
com.google.android.gms.maps.model.Cap: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.google.android.gms.internal.mlkit_acceleration.zzgy: java.lang.String zze
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
com.google.android.gms.internal.mlkit_vision_mediapipe.zzev: com.google.android.gms.internal.mlkit_vision_mediapipe.zzev zzb
androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzga zzh
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgo zzv
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw: long zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgh: java.lang.String zze
androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzhq: int zzd
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastScheduleTime
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzw
com.google.android.gms.internal.mlkit_vision_mediapipe.zzev: java.lang.String zze
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzel: com.google.android.gms.internal.mlkit_vision_mediapipe.zzkw zzi
com.google.android.gms.maps.model.MarkerOptions: android.os.Parcelable$Creator CREATOR
androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfk: float zzi
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhb: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhg: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhg zzb
com.google.mlkit.acceleration.internal.zzq: boolean zze
androidx.media3.container.MdtaMetadataEntry: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedWidth
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: long zzn
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfy: boolean zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfy: com.google.android.gms.internal.mlkit_vision_mediapipe.zzfy zzb
com.google.android.gms.internal.mlkit_acceleration.zzhn: int zzk
com.google.android.gms.internal.mlkit_vision_mediapipe.zziv: int zza
androidx.work.multiprocess.parcelable.ParcelableWorkContinuationImpl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl zzs
com.google.android.gms.internal.mlkit_acceleration.zzha: int zzd
androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: android.os.Parcelable$Creator CREATOR
androidx.media3.extractor.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgr: java.lang.String zze
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int MAX_IMAGES
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean released
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: java.lang.String zzt
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
androidx.work.multiprocess.parcelable.ParcelableConstraints: android.os.Parcelable$Creator CREATOR
com.google.mlkit.acceleration.internal.zzt: java.lang.String zzg
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: int zzm
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: java.lang.String zzi
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: java.lang.String zzl
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl zzs
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: java.lang.String zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzev: java.lang.String zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhg zzq
com.google.android.gms.internal.mlkit_vision_mediapipe.zzel: int zzk
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.google.android.gms.internal.mlkit_acceleration.zzha: com.google.android.gms.internal.mlkit_acceleration.zzea zzj
com.google.android.gms.internal.mlkit_acceleration.zzgy: com.google.android.gms.internal.mlkit_acceleration.zzgy zzb
com.google.android.gms.internal.mlkit_acceleration.zzha: int zzm
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
androidx.media3.common.DrmInitData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzkr: java.util.Map zzb
androidx.media3.extractor.metadata.id3.MlltFrame: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.maps.model.StyleSpan: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgh: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgh zzb
androidx.media3.extractor.metadata.dvbsi.AppInfoTable: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean ignoringFence
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment: android.os.Parcelable$Creator CREATOR
com.google.mlkit.acceleration.internal.zzt: java.lang.String zzi
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
androidx.work.multiprocess.parcelable.ParcelableWorkQuery: android.os.Parcelable$Creator CREATOR
com.google.mlkit.acceleration.internal.zzq: float zzi
androidx.datastore.preferences.PreferencesProto$Value: int LONG_FIELD_NUMBER
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhe: java.lang.String zze
androidx.work.multiprocess.parcelable.ParcelableWorkInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgj: java.lang.String zzd
com.google.mlkit.acceleration.internal.zzt: int zzh
com.google.android.gms.internal.mlkit_vision_mediapipe.zzft: int zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhe: int zzd
com.google.mlkit.acceleration.internal.zzq: java.lang.String zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzk
com.google.android.gms.maps.model.VisibleRegion: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.PreferencesProto$Value DEFAULT_INSTANCE
com.google.mlkit.acceleration.internal.zzt: com.google.mlkit.acceleration.internal.zzt zzb
androidx.datastore.preferences.protobuf.AbstractMessageLite: int memoizedHashCode
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.android.gms.internal.mlkit_vision_mediapipe.zzib: java.lang.String zza
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzex: com.google.android.gms.internal.mlkit_vision_mediapipe.zzex zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgr: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgr zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfk: int zzd
com.google.mlkit.acceleration.internal.zzt: com.google.android.gms.internal.mlkit_acceleration.zzea zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: com.google.android.gms.internal.mlkit_vision_mediapipe.zzo zza
androidx.media3.extractor.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: int zzn
com.google.android.gms.internal.mlkit_vision_mediapipe.zzjc: com.google.android.gms.internal.mlkit_vision_mediapipe.zzjo zze
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int UNINITIALIZED_HASH_CODE
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.media3.common.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: boolean zzs
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
androidx.media3.extractor.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: boolean zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzl
com.google.mlkit.acceleration.internal.zzq: int zzj
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.String TAG
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: byte zzx
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: boolean zzp
androidx.media3.extractor.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: java.lang.String zze
com.google.android.gms.internal.mlkit_acceleration.zzdv: com.google.android.gms.internal.mlkit_acceleration.zzge zzc
com.google.android.gms.internal.mlkit_acceleration.zzhn: java.lang.String zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzga: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzez: com.google.android.gms.internal.mlkit_vision_mediapipe.zzez zzb
androidx.datastore.preferences.PreferencesProto$Value: int INTEGER_FIELD_NUMBER
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzex: java.lang.String zze
com.google.android.gms.internal.mlkit_acceleration.zzhe: com.google.android.gms.internal.mlkit_acceleration.zzea zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfy: com.google.android.gms.internal.mlkit_vision_mediapipe.zzga zzg
com.google.android.gms.maps.model.PolylineOptions: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean createNewReader
com.google.android.gms.internal.mlkit_acceleration.zzcc: int zza
com.google.android.gms.internal.mlkit_vision_mediapipe.zzex: java.lang.String zzf
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.protobuf.Parser PARSER
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.google.android.gms.internal.mlkit_vision_mediapipe.zzga: long zzg
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzhk: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: long zzo
io.flutter.embedding.engine.FlutterJNI: float displayDensity
androidx.datastore.preferences.PreferencesProto$Value: int DOUBLE_FIELD_NUMBER
com.google.android.gms.maps.GoogleMapOptions: android.os.Parcelable$Creator CREATOR
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgy zzj
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfb: com.google.android.gms.internal.mlkit_vision_mediapipe.zzfb zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: boolean zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgh: byte zzh
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfb: boolean zzi
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: java.lang.String zzr
com.google.android.gms.internal.mlkit_acceleration.zzha: java.lang.String zzg
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: int zzj
com.google.android.gms.maps.model.PolygonOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzi
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfm: com.google.android.gms.internal.mlkit_vision_mediapipe.zzfm zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw: byte zzk
androidx.media3.common.Metadata: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.Parser PARSER
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
androidx.media3.container.Mp4LocationData: android.os.Parcelable$Creator CREATOR
androidx.media3.common.StreamKey: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgy: int zze
kotlinx.coroutines.channels.BufferedChannel: long receivers
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhg: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw zzb
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.android.gms.internal.mlkit_acceleration.zzhq: java.lang.String zze
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int MUTABLE_FLAG_MASK
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: com.google.android.gms.internal.mlkit_vision_mediapipe.zzet zzb
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean ignoringFence
com.google.android.gms.internal.mlkit_vision_mediapipe.zzft: boolean zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhe: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhe zzb
com.google.mlkit.acceleration.internal.zzt: java.lang.String zzj
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
androidx.media3.extractor.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzj
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: boolean zzh
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfb: boolean zzj
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhb: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzj
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzge zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzel: int zzj
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
kotlinx.coroutines.CancelledContinuation: int _resumed
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw: java.lang.String zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhe zzp
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfc: java.lang.Object zze
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfb: int zzd
androidx.datastore.preferences.PreferencesProto$Value: int STRING_SET_FIELD_NUMBER
com.google.android.gms.maps.model.CircleOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfb: boolean zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhg: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgo zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfm: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzd
com.google.android.gms.maps.model.TileOverlayOptions: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.PreferencesProto$PreferenceMap DEFAULT_INSTANCE
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: int zzq
com.google.android.gms.internal.mlkit_acceleration.zzhq: com.google.android.gms.internal.mlkit_acceleration.zzhq zzb
com.google.android.gms.internal.mlkit_acceleration.zzhk: com.google.android.gms.internal.mlkit_acceleration.zzhn zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzh
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzi
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: long zze
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.android.gms.internal.mlkit_acceleration.zzhe: boolean zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: java.lang.String zzu
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgr: java.lang.String zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzjc: com.google.android.gms.internal.mlkit_vision_mediapipe.zzjc zzb
com.google.mlkit.acceleration.internal.zzt: java.lang.String zzk
com.google.android.gms.internal.mlkit_vision_mediapipe.zzel: boolean zzh
com.google.android.gms.maps.model.PatternItem: android.os.Parcelable$Creator CREATOR
androidx.media3.extractor.metadata.mp4.SmtaMetadataEntry: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhb: byte zzi
com.google.android.gms.internal.mlkit_acceleration.zzhn: java.lang.String zzj
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
com.google.android.gms.internal.mlkit_vision_mediapipe.zzga: long zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzev: int zzd
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: int zzm
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgr: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgt zzh
com.google.android.gms.internal.mlkit_vision_mediapipe.zzga: long zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: int zzf
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: com.google.android.gms.internal.mlkit_vision_mediapipe.zzkw zzk
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgt: byte zze
com.google.android.gms.internal.mlkit_acceleration.zzgy: java.lang.String zzf
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzft: com.google.android.gms.internal.mlkit_vision_mediapipe.zzft zzd
com.google.android.gms.internal.mlkit_acceleration.zzhe: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfy: java.lang.String zze
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: java.util.Map zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzu
androidx.media3.extractor.metadata.icy.IcyInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzhn: java.lang.String zzi
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean newFrameAvailable
com.google.android.gms.maps.model.Tile: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: boolean zzi
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfb: boolean zzg
androidx.datastore.preferences.PreferencesProto$StringSet: int STRINGS_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzk
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastQueueTime
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfk: float zzg
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzq
com.google.android.gms.internal.mlkit_vision_mediapipe.zzga: com.google.android.gms.internal.mlkit_vision_mediapipe.zzkx zzh
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.PreferencesProto$StringSet DEFAULT_INSTANCE
androidx.datastore.preferences.PreferencesProto$Value: int valueCase_
com.google.mlkit.acceleration.internal.zzq: com.google.mlkit.acceleration.internal.zzq zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzel: int zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzkn: com.google.android.gms.internal.mlkit_vision_mediapipe.zzkg zzb
com.google.android.gms.internal.mlkit_acceleration.zzdv: int zzd
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: int zzn
androidx.media3.extractor.metadata.vorbis.VorbisComment: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: long zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: java.lang.Object zzi
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.google.android.gms.maps.model.CameraPosition: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzel: int zzd
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.google.mlkit.acceleration.internal.zzt: java.lang.String zzf
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.Object lock
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgh: java.lang.String zzf
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.android.gms.internal.mlkit_acceleration.zzdv: java.util.Map zzb
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzga zzi
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
com.google.android.gms.internal.mlkit_vision_mediapipe.zzel: int zze
androidx.datastore.preferences.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
androidx.datastore.preferences.PreferencesProto$PreferenceMap: int PREFERENCES_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf zzb
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean CLEANUP_ON_MEMORY_PRESSURE
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzr
androidx.datastore.preferences.protobuf.GeneratedMessageLite: androidx.datastore.preferences.protobuf.UnknownFieldSetLite unknownFields
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.HashMap perImageReaders
androidx.media3.extractor.metadata.flac.VorbisComment: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzhn: com.google.android.gms.internal.mlkit_acceleration.zzhn zzb
androidx.media3.extractor.metadata.flac.PictureFrame: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhb: java.lang.String zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: java.util.List zzc
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.android.gms.internal.mlkit_acceleration.zzhe: java.lang.String zze
com.google.android.gms.internal.mlkit_acceleration.zzha: java.lang.String zzi
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: boolean zzo
com.google.android.gms.internal.mlkit_acceleration.zzgy: java.lang.String zzh
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.google.android.gms.internal.mlkit_acceleration.zzgy: int zzg
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: long zzd
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzm
com.google.android.gms.internal.mlkit_acceleration.zzhn: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgj: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgj zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfk: float zzh
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: java.lang.String zzu
androidx.datastore.preferences.PreferencesProto$Value: int bitField0_
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Internal$ProtobufList strings_
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims
androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: android.os.Parcelable$Creator CREATOR
androidx.work.multiprocess.parcelable.ParcelableResult: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.ArrayDeque imageReaderQueue
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgy: boolean zzf
com.google.android.gms.internal.mlkit_acceleration.zzaj: java.lang.Object value
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.google.android.gms.maps.model.StrokeStyle: android.os.Parcelable$Creator CREATOR
androidx.media3.exoplayer.hls.HlsTrackMetadataEntry: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzha: java.lang.String zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: boolean zzf
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhe: byte zzg
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.google.android.gms.internal.mlkit_vision_mediapipe.zzga: com.google.android.gms.internal.mlkit_vision_mediapipe.zzga zzb
androidx.work.multiprocess.parcelable.ParcelableWorkRequests: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhb: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhb zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgr: int zzd
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgo: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgo zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzel: com.google.android.gms.internal.mlkit_vision_mediapipe.zzel zzb
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean VERBOSE_LOGS
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhg zzp
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int MEMOIZED_SERIALIZED_SIZE_MASK
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhb: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzg
androidx.datastore.preferences.PreferencesProto$Value: int STRING_FIELD_NUMBER
androidx.media3.extractor.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzhq: int zzf
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgh: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgo zzg
com.google.android.gms.internal.mlkit_acceleration.zzhh: com.google.android.gms.internal.mlkit_acceleration.zzhh zzb
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
io.flutter.embedding.engine.FlutterJNI: float displayHeight
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzi
com.google.android.gms.internal.mlkit_vision_mediapipe.zzev: java.lang.String zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfk: float zzf
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean trimOnMemoryPressure
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.mlkit.acceleration.internal.zzq: int zzd
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.google.android.gms.maps.model.LatLngBounds: android.os.Parcelable$Creator CREATOR
com.google.android.gms.maps.model.LatLng: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.PreferencesProto$Value: int FLOAT_FIELD_NUMBER
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.google.android.gms.internal.mlkit_acceleration.zzhk: com.google.android.gms.internal.mlkit_acceleration.zzhe zzg
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: int zzt
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: java.lang.String zzk
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw: java.lang.String zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzel: boolean zzg
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.media3.exoplayer.hls.HlsTrackMetadataEntry$VariantInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzha: int zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhe zzo
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: java.util.Map zzh
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: java.util.Map zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: int zzd
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.mlkit.acceleration.internal.zzq: int zzh
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzes: com.google.android.gms.internal.mlkit_vision_mediapipe.zzes zzb
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastDequeueTime
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback
com.google.android.gms.internal.mlkit_acceleration.zzaj: com.google.android.gms.internal.mlkit_acceleration.zzaj$zzk waiters
com.google.android.gms.maps.model.StampStyle: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: float displayWidth
androidx.media3.container.Mp4TimestampData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzkr: com.google.android.gms.internal.mlkit_vision_mediapipe.zzmx zzc
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfw: long zzf
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.gms.internal.mlkit_acceleration.zzha: com.google.android.gms.internal.mlkit_acceleration.zzha zzb
com.google.android.gms.internal.mlkit_acceleration.zzha: com.google.android.gms.internal.mlkit_acceleration.zzea zzk
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: java.lang.String zzh
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgw: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzg
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
com.google.android.gms.internal.mlkit_vision_mediapipe.zzes: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhg: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzf
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf: int zzh
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: boolean zzr
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzft zzk
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgh: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfy: int zzd
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfc: com.google.android.gms.internal.mlkit_vision_mediapipe.zzfc zzb
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgy: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgy zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgt: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgt zzd
com.google.android.gms.internal.mlkit_acceleration.zzha: com.google.android.gms.internal.mlkit_acceleration.zzea zzl
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: boolean zzt
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhg: byte zzh
com.google.android.gms.internal.mlkit_acceleration.zzaj$zzk: com.google.android.gms.internal.mlkit_acceleration.zzaj$zzk next
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgj: boolean zze
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgr: byte zzi
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
com.google.mlkit.acceleration.internal.zzt: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzv
com.google.android.gms.internal.mlkit_vision_mediapipe.zzjc: java.lang.String zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgl zzb
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
kotlinx.coroutines.DispatchedCoroutine: int _decision
androidx.media3.extractor.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhb: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgo zzh
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgo: byte zze
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int memoizedSerializedSize
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp zza
com.google.android.gms.internal.mlkit_vision_mediapipe.zzet: com.google.android.gms.internal.mlkit_vision_mediapipe.zzkw zzm
androidx.work.multiprocess.parcelable.ParcelableData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: com.google.android.gms.internal.mlkit_vision_mediapipe.zzky zzl
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfb: boolean zzh
com.google.android.gms.internal.mlkit_vision_mediapipe.zzfk: float zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzex: int zzd
com.google.android.gms.internal.mlkit_vision_mediapipe.zzgy: byte zzg
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Parser PARSER
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.google.android.gms.internal.mlkit_vision_mediapipe.zzft: byte zzg
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
com.google.android.gms.internal.mlkit_acceleration.zzhn: java.lang.String zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzge: byte zzw
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.google.android.gms.internal.mlkit_vision_mediapipe.zzex: java.lang.String zzg
com.google.android.gms.internal.mlkit_acceleration.zzhn: java.lang.String zzh
androidx.media3.extractor.metadata.icy.IcyHeaders: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhe: com.google.android.gms.internal.mlkit_vision_mediapipe.zzgo zzf
androidx.media3.extractor.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhg: java.lang.String zze
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: boolean zzg
androidx.work.multiprocess.parcelable.ParcelableRuntimeExtras: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.mlkit_acceleration.zzgy: int zzd
com.google.android.gms.internal.mlkit_acceleration.zzaj: com.google.android.gms.internal.mlkit_acceleration.zzaj$zzd listeners
com.google.android.gms.internal.mlkit_vision_mediapipe.zzkr: int zzd
androidx.datastore.preferences.PreferencesProto$Value: int BOOLEAN_FIELD_NUMBER
com.google.android.gms.internal.mlkit_vision_mediapipe.zzes: boolean zze
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean notifiedDestroy
com.google.android.gms.internal.mlkit_acceleration.zzhe: com.google.android.gms.internal.mlkit_acceleration.zzhe zzb
androidx.datastore.preferences.PreferencesProto$Value: java.lang.Object value_
com.google.mlkit.vision.mediapipe.utils.ImageConvertNativeUtils: byte[] byteArrayToRgb(byte[],int,int,int,int)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
androidx.camera.video.internal.compat.quirk.SignalEosOutputBufferNotComeQuirk: SignalEosOutputBufferNotComeQuirk()
androidx.tracing.TraceApi29Impl: boolean isEnabled()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType: androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: void setPresentationView(android.view.View)
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoResolutionFallbackRule: io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoResolutionFallbackRule[] values()
com.google.mlkit.acceleration.internal.MlKitRemoteWorkerService: MlKitRemoteWorkerService()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
io.flutter.plugins.imagepicker.Messages$SourceType: io.flutter.plugins.imagepicker.Messages$SourceType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
io.flutter.plugins.camerax.GeneratedCameraXLibrary$LiveDataSupportedType: io.flutter.plugins.camerax.GeneratedCameraXLibrary$LiveDataSupportedType valueOf(java.lang.String)
androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState: androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState[] values()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.camera.video.internal.audio.AudioSource$InternalState: androidx.camera.video.internal.audio.AudioSource$InternalState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zze(java.util.List,com.google.android.gms.internal.mlkit_vision_mediapipe.zzhz,boolean)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
androidx.media3.exoplayer.audio.DefaultAudioSink$Api31: void setLogSessionIdOnAudioTrack(android.media.AudioTrack,androidx.media3.exoplayer.analytics.PlayerId)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
kotlin.collections.AbstractMutableList: AbstractMutableList()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: androidx.window.extensions.area.ExtensionWindowAreaPresentation getRearDisplayPresentation()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] values()
androidx.camera.camera2.internal.CaptureSession$State: androidx.camera.camera2.internal.CaptureSession$State[] values()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv zze(com.google.android.gms.internal.mlkit_vision_mediapipe.zzlw)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv zzb(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: long zzg(long)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: long zzf(long)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
androidx.camera.video.Recorder$AudioState: androidx.camera.video.Recorder$AudioState[] values()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getSubtitle(android.media.MediaDescription)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
androidx.camera.camera2.internal.compat.quirk.ImageCaptureFlashNotFireQuirk: ImageCaptureFlashNotFireQuirk()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.camera.camera2.internal.compat.quirk.PreviewPixelHDRnetQuirk: PreviewPixelHDRnetQuirk()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.appcompat.widget.SwitchCompat$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.camera.core.ImageProcessingUtil: int nativeCopyBetweenByteBufferAndBitmap(android.graphics.Bitmap,java.nio.ByteBuffer,int,int,int,int,boolean)
io.flutter.view.TextureRegistry$SurfaceProducer: boolean handlesCropAndRotation()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhl: zzhl(com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzaz: com.google.android.gms.internal.mlkit_vision_mediapipe.zzaz[] values()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.google.android.gms.internal.mlkit_vision_common.zzii: com.google.android.gms.internal.mlkit_vision_common.zzii[] values()
androidx.media3.exoplayer.audio.AudioCapabilities$Api33: androidx.media3.exoplayer.audio.AudioDeviceInfoApi23 getDefaultRoutedDeviceForAttributes(android.media.AudioManager,androidx.media3.common.AudioAttributes)
com.google.android.gms.internal.mlkit_vision_pose_common.zzsh: com.google.android.gms.internal.mlkit_vision_pose_common.zzsh[] values()
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$Api23: void registerAudioDeviceCallback(android.content.Context,android.media.AudioDeviceCallback,android.os.Handler)
androidx.camera.video.internal.compat.quirk.VideoEncoderSuspendDoesNotIncludeSuspendTimeQuirk: VideoEncoderSuspendDoesNotIncludeSuspendTimeQuirk()
androidx.camera.camera2.Camera2Config$DefaultProvider: androidx.camera.core.CameraXConfig getCameraXConfig()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader access$800(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
io.flutter.plugins.googlemaps.Messages$PlatformMapBitmapScaling: io.flutter.plugins.googlemaps.Messages$PlatformMapBitmapScaling[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhl: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv zza(android.graphics.Bitmap)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
kotlin.random.Random: Random()
com.google.common.collect.Ordering: Ordering()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29: int areResolutionAndFrameRateCovered(android.media.MediaCodecInfo$VideoCapabilities,int,int,double)
androidx.camera.camera2.internal.compat.quirk.CaptureSessionStuckQuirk: CaptureSessionStuckQuirk()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhr: byte[][] zzb(long)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.camera.core.impl.CameraCaptureMetaData$AfState: androidx.camera.core.impl.CameraCaptureMetaData$AfState[] values()
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void setCurrentPlayTime(android.animation.AnimatorSet,long)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setSize(int,int)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType valueOf(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.camera.camera2.internal.compat.quirk.ImageCaptureFailedWhenVideoCaptureIsBoundQuirk: ImageCaptureFailedWhenVideoCaptureIsBoundQuirk()
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.preference.SwitchPreferenceCompat: SwitchPreferenceCompat(android.content.Context,android.util.AttributeSet)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: android.util.DisplayMetrics getWindowAreaDisplayMetrics()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzr(long)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: long zzo()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.ryanheise.audio_session.AudioSessionPlugin: AudioSessionPlugin()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29: void unregister(android.media.AudioTrack)
androidx.camera.camera2.internal.compat.quirk.ImageCapturePixelHDRPlusQuirk: ImageCapturePixelHDRPlusQuirk()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
com.google.android.gms.internal.mlkit_vision_pose_common.zzdd: com.google.android.gms.internal.mlkit_vision_pose_common.zzdd[] values()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: byte[] zzi(long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.camera.core.impl.SessionConfig$SessionError: androidx.camera.core.impl.SessionConfig$SessionError[] values()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.media3.common.AudioAttributes$Api32: void setSpatializationBehavior(android.media.AudioAttributes$Builder,int)
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.google.android.gms.internal.mlkit_vision_pose_common.zzpn: com.google.android.gms.internal.mlkit_vision_pose_common.zzpn[] values()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.camera.camera2.internal.compat.quirk.TemporalNoiseQuirk: TemporalNoiseQuirk()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onTrimMemory(int)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
androidx.lifecycle.ReportFragment: ReportFragment()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.camera.video.internal.compat.quirk.EncoderNotUsePersistentInputSurfaceQuirk: EncoderNotUsePersistentInputSurfaceQuirk()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzat: com.google.android.gms.internal.mlkit_vision_mediapipe.zzat[] values()
com.google.maps.android.ui.RotationLayout: void setViewRotation(int)
androidx.camera.video.internal.compat.quirk.StretchedVideoResolutionQuirk: StretchedVideoResolutionQuirk()
androidx.camera.core.internal.compat.quirk.LowMemoryQuirk: LowMemoryQuirk()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: long zza(long,boolean)
io.flutter.plugins.camerax.GeneratedCameraXLibrary$CaptureRequestKeySupportedType: io.flutter.plugins.camerax.GeneratedCameraXLibrary$CaptureRequestKeySupportedType valueOf(java.lang.String)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
androidx.camera.camera2.internal.compat.quirk.ImageCaptureWithFlashUnderexposureQuirk: ImageCaptureWithFlashUnderexposureQuirk()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.camera.core.impl.CameraCaptureMetaData$FlashState: androidx.camera.core.impl.CameraCaptureMetaData$FlashState valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.media.AudioFocusRequestCompat$Api26Impl: android.media.AudioFocusRequest createInstance(int,android.media.AudioAttributes,boolean,android.media.AudioManager$OnAudioFocusChangeListener,android.os.Handler)
androidx.camera.core.impl.Timebase: androidx.camera.core.impl.Timebase[] values()
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
androidx.camera.video.internal.compat.quirk.CodecStuckOnFlushQuirk: CodecStuckOnFlushQuirk()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.camera.video.Recorder$State: androidx.camera.video.Recorder$State valueOf(java.lang.String)
androidx.camera.camera2.internal.compat.quirk.ImageCaptureFailWithAutoFlashQuirk: ImageCaptureFailWithAutoFlashQuirk()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.graphics.Bitmap getIconBitmap(android.media.MediaDescription)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void addRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType valueOf(java.lang.String)
androidx.camera.core.internal.compat.quirk.LargeJpegImageQuirk: LargeJpegImageQuirk()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.media3.exoplayer.video.MediaCodecVideoRenderer$Api26: boolean doesDisplaySupportDolbyVision(android.content.Context)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.camera.camera2.internal.compat.quirk.ZslDisablerQuirk: ZslDisablerQuirk()
com.google.mlkit.vision.common.internal.MobileVisionBase: void close()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.media3.exoplayer.audio.MediaCodecAudioRenderer$Api23: void setAudioSinkPreferredDevice(androidx.media3.exoplayer.audio.AudioSink,java.lang.Object)
io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoQuality: io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoQuality[] values()
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$502(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.flutter.view.TextureRegistry$SurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState: androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] values()
androidx.camera.camera2.internal.compat.quirk.ImageCaptureWashedOutImageQuirk: ImageCaptureWashedOutImageQuirk()
androidx.camera.core.impl.CameraCaptureMetaData$AwbMode: androidx.camera.core.impl.CameraCaptureMetaData$AwbMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.camera.core.processing.util.GLUtils$InputFormat: androidx.camera.core.processing.util.GLUtils$InputFormat[] values()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv zzf(java.nio.ByteBuffer,int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void pruneImageReaderQueue()
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics getViewportMetrics()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
com.csdcorp.speech_to_text.ListenMode: com.csdcorp.speech_to_text.ListenMode[] values()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzht: com.google.android.gms.internal.mlkit_vision_mediapipe.zzht[] values()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.flutter.plugins.sharedpreferences.StringListLookupResultType: io.flutter.plugins.sharedpreferences.StringListLookupResultType[] values()
androidx.camera.core.impl.CameraCaptureMetaData$FlashState: androidx.camera.core.impl.CameraCaptureMetaData$FlashState[] values()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
androidx.camera.core.impl.CameraCaptureFailure$Reason: androidx.camera.core.impl.CameraCaptureFailure$Reason valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.internal.mlkit_vision_pose_common.zzaf: zzaf()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhk: boolean zzb(android.content.Context,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzax: com.google.android.gms.internal.mlkit_vision_mediapipe.zzax[] values()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType valueOf(java.lang.String)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzf()
androidx.preference.SwitchPreference: SwitchPreference(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onImage(android.media.ImageReader,android.media.Image)
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: long zzi(long,int)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
androidx.camera.camera2.internal.compat.quirk.JpegHalCorruptImageQuirk: JpegHalCorruptImageQuirk()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzv(long,java.lang.String[],long[],java.lang.String[],long[])
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.camera.video.internal.compat.quirk.AudioEncoderIgnoresInputTimestampQuirk: AudioEncoderIgnoresInputTimestampQuirk()
io.flutter.view.TextureRegistry$SurfaceProducer: void release()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: boolean ShouldDisableAHB()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.flutter.plugins.googlemaps.Messages$PlatformJointType: io.flutter.plugins.googlemaps.Messages$PlatformJointType valueOf(java.lang.String)
com.google.common.base.Function: boolean equals(java.lang.Object)
okhttp3.HttpUrl$Builder$ParseResult: okhttp3.HttpUrl$Builder$ParseResult valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.camera.camera2.internal.compat.quirk.AspectRatioLegacyApi21Quirk: AspectRatioLegacyApi21Quirk()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$Api21: boolean registerOnBufferAvailableListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$MediaCodecRendererCodecAdapterListener)
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType[] values()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.preference.SeekBarPreference: SeekBarPreference(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
io.flutter.plugins.imagepicker.Messages$SourceCamera: io.flutter.plugins.imagepicker.Messages$SourceCamera[] values()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.research.xeno.effect.AssetRegistryService: void nativeInstallServiceObject(long,long)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: UrlLauncherPlugin()
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: long id()
io.flutter.plugins.pathprovider.PathProviderPlugin: PathProviderPlugin()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.google.android.gms.common.api.internal.zzb: zzb()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.camera.camera2.internal.compat.quirk.ImageCaptureFailedForVideoSnapshotQuirk: ImageCaptureFailedForVideoSnapshotQuirk()
androidx.camera.camera2.internal.compat.quirk.Preview3AThreadCrashQuirk: Preview3AThreadCrashQuirk()
androidx.camera.core.impl.utils.SurfaceUtil: int[] nativeGetSurfaceInfo(android.view.Surface)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.view.TextureRegistry$SurfaceProducer: void setSize(int,int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.camera.core.impl.UseCaseConfigFactory$CaptureType: androidx.camera.core.impl.UseCaseConfigFactory$CaptureType valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzh(byte[])
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: int zzg(long)
androidx.work.impl.WorkDatabase: WorkDatabase()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.android.gms.internal.mlkit_vision_pose_common.zzsg: com.google.android.gms.internal.mlkit_vision_pose_common.zzsg[] values()
com.google.android.gms.internal.mlkit_vision_pose_common.zzuq: com.google.android.gms.internal.mlkit_vision_pose_common.zzuq[] values()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.mlkit.vision.pose.PoseDetector: void close()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.camera.video.internal.compat.quirk.DeactivateEncoderSurfaceBeforeStopEncoderQuirk: DeactivateEncoderSurfaceBeforeStopEncoderQuirk()
okhttp3.internal.framed.HeadersMode: okhttp3.internal.framed.HeadersMode valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: void onStop(androidx.lifecycle.LifecycleOwner)
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
androidx.camera.core.internal.compat.quirk.ImageCaptureRotationOptionQuirk: ImageCaptureRotationOptionQuirk()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void reverse(android.animation.AnimatorSet)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
io.flutter.embedding.engine.FlutterJNI: boolean nativeShouldDisableAHB()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.google.mlkit.vision.pose.internal.PoseMiniBenchmarkWorker: PoseMiniBenchmarkWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24: void release()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.media.MediaDescription$Builder createBuilder()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.google.common.collect.AbstractMapEntry: AbstractMapEntry()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] values()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.media.AudioManagerCompat$Api26Impl: int abandonAudioFocusRequest(android.media.AudioManager,android.media.AudioFocusRequest)
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType[] values()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: byte[][] zzj(long)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
androidx.camera.core.UseCase$State: androidx.camera.core.UseCase$State valueOf(java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.camera.camera2.internal.compat.quirk.CaptureNoResponseQuirk: CaptureNoResponseQuirk()
androidx.media3.exoplayer.video.VideoFrameReleaseHelper$Api30: void setSurfaceFrameRate(android.view.Surface,float)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.media3.exoplayer.drm.DrmUtil$Api21: int mediaDrmStateExceptionToErrorCode(java.lang.Throwable)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
io.flutter.plugins.camerax.GeneratedCameraXLibrary$CameraStateType: io.flutter.plugins.camerax.GeneratedCameraXLibrary$CameraStateType valueOf(java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.framed.ErrorCode: okhttp3.internal.framed.ErrorCode valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
androidx.media3.datasource.RawResourceDataSource: android.net.Uri buildRawResourceUri(int)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: long zzb()
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void release()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.camera.core.ImageProcessingUtil: int nativeShiftPixel(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int,int,int,int,int)
androidx.camera.core.UseCase$State: androidx.camera.core.UseCase$State[] values()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzt(long,java.lang.String,long,long)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.camera.video.internal.compat.quirk.VideoEncoderCrashQuirk: VideoEncoderCrashQuirk()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.preference.DialogPreference: DialogPreference(android.content.Context,android.util.AttributeSet)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
androidx.camera.camera2.internal.compat.quirk.ExcludedSupportedSizesQuirk: ExcludedSupportedSizesQuirk()
io.flutter.plugins.sharedpreferences.LegacySharedPreferencesPlugin: LegacySharedPreferencesPlugin()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
androidx.core.os.ConfigurationCompat$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzm()
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection[] values()
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] values()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.os.Bundle getExtras(android.media.MediaDescription)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: void onStart(androidx.lifecycle.LifecycleOwner)
androidx.camera.camera2.internal.ProcessingCaptureSession$ProcessorState: androidx.camera.camera2.internal.ProcessingCaptureSession$ProcessorState valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29: void register(android.media.AudioTrack)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24: void onRoutingChanged(android.media.AudioRouting)
com.google.mlkit.acceleration.internal.MiniBenchmarkWorker: MiniBenchmarkWorker(android.content.Context,androidx.work.WorkerParameters,com.google.mlkit.acceleration.internal.PipelineId,com.google.mlkit.acceleration.internal.MiniBenchmarkConfig,com.google.mlkit.acceleration.internal.AccelerationLogger)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getOrCreatePerImageReader(android.media.ImageReader)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
androidx.media3.exoplayer.audio.AudioCapabilities$Api29: int getMaxSupportedChannelCountForPassthrough(int,int,androidx.media3.common.AudioAttributes)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void maybeWaitOnFence(android.media.Image)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
okhttp3.Protocol: okhttp3.Protocol[] values()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.google.android.gms.internal.mlkit_vision_pose_common.zzus: com.google.android.gms.internal.mlkit_vision_pose_common.zzus[] values()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection valueOf(java.lang.String)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
androidx.media3.exoplayer.audio.AudioCapabilities$Api33: androidx.media3.exoplayer.audio.AudioCapabilities getCapabilitiesInternalForDirectPlayback(android.media.AudioManager,androidx.media3.common.AudioAttributes)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeaturesInNative(int)
com.google.android.gms.internal.mlkit_vision_common.zzah: com.google.android.gms.internal.mlkit_vision_common.zzah[] values()
androidx.work.multiprocess.RemoteWorkManagerClient: RemoteWorkManagerClient(android.content.Context,androidx.work.impl.WorkManagerImpl,long)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void addRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoResolutionFallbackRule: io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoResolutionFallbackRule valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder[] values()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.preference.CheckBoxPreference: CheckBoxPreference(android.content.Context,android.util.AttributeSet)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
androidx.camera.camera2.internal.compat.quirk.LegacyCameraOutputConfigNullPointerQuirk: LegacyCameraOutputConfigNullPointerQuirk()
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.window.extensions.core.util.function.Function: java.lang.Object apply(java.lang.Object)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
io.flutter.view.TextureRegistry$ImageTextureEntry: long id()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.google.mlkit.common.internal.MlKitInitProvider: MlKitInitProvider()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.work.multiprocess.RemoteListenableWorker: RemoteListenableWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.camera.video.VideoEncoderSession$VideoEncoderState: androidx.camera.video.VideoEncoderSession$VideoEncoderState valueOf(java.lang.String)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.camera.core.internal.compat.quirk.SurfaceOrderQuirk: SurfaceOrderQuirk()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase valueOf(java.lang.String)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.google_mlkit_pose_detection.GoogleMlKitPoseDetectionPlugin: GoogleMlKitPoseDetectionPlugin()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
io.flutter.plugins.camerax.GeneratedCameraXLibrary$CameraStateType: io.flutter.plugins.camerax.GeneratedCameraXLibrary$CameraStateType[] values()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
com.google.mlkit.vision.pose.internal.PoseRegistrar: PoseRegistrar()
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: long totalDuration(android.animation.AnimatorSet)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
androidx.preference.PreferenceScreen: PreferenceScreen(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv zzc()
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
okhttp3.CipherSuite: okhttp3.CipherSuite[] values()
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv zzd(long)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoRecordEvent: io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoRecordEvent[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.Image acquireLatestImage()
com.google.android.gms.internal.mlkit_vision_mediapipe.zznh: com.google.android.gms.internal.mlkit_vision_mediapipe.zznh[] values()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
io.flutter.embedding.engine.FlutterJNI: void scheduleFrame()
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State valueOf(java.lang.String)
androidx.camera.core.impl.CameraCaptureMetaData$AfMode: androidx.camera.core.impl.CameraCaptureMetaData$AfMode[] values()
androidx.camera.core.impl.CameraCaptureMetaData$AeMode: androidx.camera.core.impl.CameraCaptureMetaData$AeMode valueOf(java.lang.String)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
androidx.camera.camera2.internal.compat.quirk.FlashAvailabilityBufferUnderflowQuirk: FlashAvailabilityBufferUnderflowQuirk()
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
io.flutter.embedding.android.FlutterView: void setDelegate(io.flutter.embedding.android.FlutterViewDelegate)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.google.mlkit.vision.mediapipe.utils.ImageConvertNativeUtils: byte[] yuvPlanesToRgb(java.nio.ByteBuffer,java.nio.ByteBuffer,java.nio.ByteBuffer,int,int,int,int,int,int)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzs(long,byte[])
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice[] values()
androidx.camera.video.internal.compat.quirk.ExtraSupportedQualityQuirk: ExtraSupportedQualityQuirk()
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
androidx.camera.camera2.internal.compat.quirk.StillCaptureFlashStopRepeatingQuirk: StillCaptureFlashStopRepeatingQuirk()
androidx.camera.core.internal.compat.quirk.IncorrectJpegMetadataQuirk: IncorrectJpegMetadataQuirk()
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.camera.core.impl.CameraCaptureMetaData$AeMode: androidx.camera.core.impl.CameraCaptureMetaData$AeMode[] values()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.work.WorkManagerInitializer: WorkManagerInitializer()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: zzhx(com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.camera.camera2.internal.compat.quirk.YuvImageOnePixelShiftQuirk: YuvImageOnePixelShiftQuirk()
androidx.camera.camera2.internal.compat.quirk.AfRegionFlipHorizontallyQuirk: AfRegionFlipHorizontallyQuirk()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType valueOf(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType[] values()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.camera.video.Recorder$AudioState: androidx.camera.video.Recorder$AudioState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode valueOf(java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
com.google.mlkit.common.internal.CommonComponentRegistrar: CommonComponentRegistrar()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void startRearDisplaySession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void waitOnFence(android.media.Image)
com.google.android.gms.common.ErrorDialogFragment: ErrorDialogFragment()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
androidx.camera.camera2.internal.compat.quirk.SmallDisplaySizeQuirk: SmallDisplaySizeQuirk()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void release()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet)
androidx.preference.internal.PreferenceImageView: int getMaxWidth()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.media3.exoplayer.audio.DefaultAudioOffloadSupportProvider$Api29: androidx.media3.exoplayer.audio.AudioOffloadSupport getOffloadedPlaybackSupport(android.media.AudioFormat,android.media.AudioAttributes,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.work.multiprocess.RemoteWorkManagerClient: RemoteWorkManagerClient(android.content.Context,androidx.work.impl.WorkManagerImpl)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder valueOf(java.lang.String)
com.google.android.gms.common.api.internal.zzd: zzd()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getHeight()
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.camera.camera2.internal.compat.quirk.FlashTooSlowQuirk: FlashTooSlowQuirk()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setIconBitmap(android.media.MediaDescription$Builder,android.graphics.Bitmap)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.google.android.gms.internal.mlkit_acceleration.zzee: com.google.android.gms.internal.mlkit_acceleration.zzee[] values()
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.window.extensions.core.util.function.Consumer: void accept(java.lang.Object)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzj(com.google.android.gms.internal.mlkit_vision_mediapipe.zzhs,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.camera.core.impl.Config$OptionPriority: androidx.camera.core.impl.Config$OptionPriority[] values()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void scheduleFrame()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImageReaders()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
androidx.camera.core.impl.CameraCaptureMetaData$AfMode: androidx.camera.core.impl.CameraCaptureMetaData$AfMode valueOf(java.lang.String)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
androidx.media3.exoplayer.audio.DefaultAudioSink$Api23: void setPreferredDeviceOnAudioTrack(android.media.AudioTrack,androidx.media3.exoplayer.audio.AudioDeviceInfoApi23)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.media3.exoplayer.ExoPlayerImpl$Api23: boolean isSuitableAudioOutputPresentInAudioDeviceInfoList(android.content.Context,android.media.AudioDeviceInfo[])
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getActiveReader()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: android.util.DisplayMetrics getRearDisplayMetrics()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.media3.exoplayer.audio.AudioCapabilities$Api29: com.google.common.collect.ImmutableList getDirectPlaybackSupportedEncodings(androidx.media3.common.AudioAttributes)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv zzg(java.lang.String)
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
io.flutter.plugins.googlemaps.Messages$PlatformPatternItemType: io.flutter.plugins.googlemaps.Messages$PlatformPatternItemType valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.camera.video.internal.compat.quirk.MediaFormatMustNotUseFrameRateToFindEncoderQuirk: MediaFormatMustNotUseFrameRateToFindEncoderQuirk()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void releaseInternal()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$302(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,boolean)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
okhttp3.internal.framed.ErrorCode: okhttp3.internal.framed.ErrorCode[] values()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzib: zzib()
io.flutter.view.TextureRegistry$SurfaceProducer: android.view.Surface getSurface()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.media.AudioManagerCompat$Api26Impl: int requestAudioFocus(android.media.AudioManager,android.media.AudioFocusRequest)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.camera.core.ImageProcessingUtil: int nativeConvertAndroid420ToABGR(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,android.view.Surface,java.nio.ByteBuffer,int,int,int,int,int,int)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
io.flutter.plugins.imagepicker.ImagePickerCache$CacheType: io.flutter.plugins.imagepicker.ImagePickerCache$CacheType[] values()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzd(java.util.List,com.google.android.gms.internal.mlkit_vision_mediapipe.zzhz)
androidx.media3.datasource.FileDataSource$Api21: boolean isPermissionError(java.lang.Throwable)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void endRearDisplayPresentationSession()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.camera.video.internal.compat.quirk.ExcludeStretchedVideoQualityQuirk: ExcludeStretchedVideoQualityQuirk()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.google.mlkit.common.internal.MlKitComponentDiscoveryService: MlKitComponentDiscoveryService()
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator[] values()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhz: void zza(java.util.List)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhk: boolean zza(android.content.Context)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.camera.lifecycle.LifecycleCamera: void onPause(androidx.lifecycle.LifecycleOwner)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzn()
okhttp3.CipherSuite: okhttp3.CipherSuite valueOf(java.lang.String)
io.flutter.view.TextureRegistry$ImageTextureEntry: void release()
androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31: boolean requiresSecureDecoder(android.media.MediaDrm,java.lang.String)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback access$200(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhu: zzhu(int,java.lang.String)
com.csdcorp.speech_to_text.SpeechToTextPlugin: SpeechToTextPlugin()
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: int getWindowAreaStatus()
com.google.android.gms.maps.GoogleMapOptions: GoogleMapOptions()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.preference.UnPressableLinearLayout: UnPressableLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.camera.core.CameraX$InternalInitState: androidx.camera.core.CameraX$InternalInitState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.work.multiprocess.RemoteWorkManagerService: RemoteWorkManagerService()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
com.google_mlkit_commons.GoogleMlKitCommonsPlugin: GoogleMlKitCommonsPlugin()
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
androidx.camera.core.ImageProcessingUtil: int nativeConvertAndroid420ToBitmap(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,android.graphics.Bitmap,int,int,int)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerPlugin: ImagePickerPlugin()
androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType: androidx.camera.core.internal.utils.ImageUtil$CodecFailedException$FailureType valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type valueOf(java.lang.String)
okhttp3.internal.framed.HeadersMode: okhttp3.internal.framed.HeadersMode[] values()
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.work.multiprocess.RemoteCoroutineWorker: RemoteCoroutineWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.camera.video.internal.encoder.EncoderImpl$InternalState: androidx.camera.video.internal.encoder.EncoderImpl$InternalState valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.google.android.gms.internal.mlkit_vision_pose_common.zzov: com.google.android.gms.internal.mlkit_vision_pose_common.zzov[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader29()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setIconUri(android.media.MediaDescription$Builder,android.net.Uri)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice valueOf(java.lang.String)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getTitle(android.media.MediaDescription)
androidx.media3.exoplayer.drm.DrmUtil$Api23: boolean isMediaDrmResetException(java.lang.Throwable)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
androidx.camera.camera2.internal.compat.quirk.IncorrectCaptureStateQuirk: IncorrectCaptureStateQuirk()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean shouldUpdate()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
androidx.camera.lifecycle.LifecycleCamera: void onResume(androidx.lifecycle.LifecycleOwner)
androidx.camera.camera2.internal.ProcessingCaptureSession$ProcessorState: androidx.camera.camera2.internal.ProcessingCaptureSession$ProcessorState[] values()
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.ryanheise.just_audio.AudioPlayer$ProcessingState: com.ryanheise.just_audio.AudioPlayer$ProcessingState valueOf(java.lang.String)
com.google.android.gms.internal.mlkit_vision_pose_common.zzux: com.google.android.gms.internal.mlkit_vision_pose_common.zzux[] values()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean handlesCropAndRotation()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.camera.core.impl.CameraCaptureMetaData$AeState: androidx.camera.core.impl.CameraCaptureMetaData$AeState valueOf(java.lang.String)
io.flutter.plugins.camerax.CameraAndroidCameraxPlugin: CameraAndroidCameraxPlugin()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.String getMediaId(android.media.MediaDescription)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.preference.Preference: Preference(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax valueOf(java.lang.String)
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.camera.core.impl.SessionConfig$SessionError: androidx.camera.core.impl.SessionConfig$SessionError valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
android.support.v4.media.MediaDescriptionCompat$Api23Impl: void setMediaUri(android.media.MediaDescription$Builder,android.net.Uri)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
io.flutter.plugins.imagepicker.Messages$CacheRetrievalType: io.flutter.plugins.imagepicker.Messages$CacheRetrievalType valueOf(java.lang.String)
androidx.camera.core.ImageProcessingUtil$Result: androidx.camera.core.ImageProcessingUtil$Result[] values()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: FlutterAndroidLifecyclePlugin()
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.window.extensions.core.util.function.Predicate: boolean test(java.lang.Object)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$Api23: void unregisterAudioDeviceCallback(android.content.Context,android.media.AudioDeviceCallback)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
io.flutter.view.TextureRegistry$SurfaceProducer: void scheduleFrame()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhr zzb()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax[] values()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: SsMediaSource$Factory(androidx.media3.datasource.DataSource$Factory)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzdk: com.google.android.gms.internal.mlkit_vision_mediapipe.zzdk[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: ExtraSupportedSurfaceCombinationsQuirk()
com.google.android.gms.internal.mlkit_vision_pose_common.zzpo: com.google.android.gms.internal.mlkit_vision_pose_common.zzpo[] values()
androidx.camera.core.impl.utils.ExifData$WhiteBalanceMode: androidx.camera.core.impl.utils.ExifData$WhiteBalanceMode valueOf(java.lang.String)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setMediaId(android.media.MediaDescription$Builder,java.lang.String)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
androidx.camera.video.internal.compat.quirk.NegativeLatLongSavesIncorrectlyQuirk: NegativeLatLongSavesIncorrectlyQuirk()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.camera.video.internal.compat.quirk.ExtraSupportedResolutionQuirk: ExtraSupportedResolutionQuirk()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.ryanheise.just_audio.JustAudioPlugin: JustAudioPlugin()
androidx.appcompat.widget.SearchView: int getInputType()
io.flutter.plugins.imagepicker.ImagePickerCache$CacheType: io.flutter.plugins.imagepicker.ImagePickerCache$CacheType valueOf(java.lang.String)
androidx.camera.camera2.internal.compat.quirk.Nexus4AndroidLTargetAspectRatioQuirk: Nexus4AndroidLTargetAspectRatioQuirk()
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.media3.exoplayer.dash.DashMediaSource$Factory: DashMediaSource$Factory(androidx.media3.datasource.DataSource$Factory)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzy(java.util.Map,java.lang.String[],long[])
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.camera.video.internal.compat.quirk.MediaCodecInfoReportIncorrectInfoQuirk: MediaCodecInfoReportIncorrectInfoQuirk()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv zzc(float)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.mlkit_vision_pose_common.zztd: com.google.android.gms.internal.mlkit_vision_pose_common.zztd[] values()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: int zza(com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzi(java.util.Map)
androidx.camera.video.VideoOutput$SourceState: androidx.camera.video.VideoOutput$SourceState[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.view.TextureRegistry$SurfaceProducer: long id()
androidx.preference.MultiSelectListPreference: MultiSelectListPreference(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: long zzl(long,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzq(long,java.util.List,com.google.android.gms.internal.mlkit_vision_mediapipe.zzhz,boolean)
com.google.android.gms.internal.mlkit_vision_common.zzio: com.google.android.gms.internal.mlkit_vision_common.zzio[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
com.google.android.gms.internal.mlkit_vision_pose_common.zzsf: com.google.android.gms.internal.mlkit_vision_pose_common.zzsf[] values()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType[] values()
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.google.common.collect.BaseImmutableMultimap: BaseImmutableMultimap()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoQuality: io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoQuality valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.camera.camera2.internal.compat.quirk.CameraNoResponseWhenEnablingFlashQuirk: CameraNoResponseWhenEnablingFlashQuirk()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzdm: com.google.android.gms.internal.mlkit_vision_mediapipe.zzdm[] values()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setExtras(android.media.MediaDescription$Builder,android.os.Bundle)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: boolean zzd(com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv,java.nio.ByteBuffer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void finalize()
androidx.camera.camera2.internal.compat.quirk.PreviewStretchWhenVideoCaptureIsBoundQuirk: PreviewStretchWhenVideoCaptureIsBoundQuirk()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
androidx.camera.camera2.internal.compat.quirk.InvalidVideoProfilesQuirk: InvalidVideoProfilesQuirk()
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
androidx.camera.camera2.internal.compat.quirk.TextureViewIsClosedQuirk: TextureViewIsClosedQuirk()
androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type[] values()
androidx.camera.core.internal.compat.quirk.CaptureFailedRetryQuirk: CaptureFailedRetryQuirk()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.media3.exoplayer.hls.HlsMediaSource$Factory: HlsMediaSource$Factory(androidx.media3.datasource.DataSource$Factory)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
androidx.camera.core.impl.CameraInternal$State: androidx.camera.core.impl.CameraInternal$State[] values()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.preference.internal.PreferenceImageView: void setMaxHeight(int)
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.camera.camera2.internal.compat.quirk.JpegCaptureDownsizingQuirk: JpegCaptureDownsizingQuirk()
androidx.camera.core.processing.util.GLUtils$InputFormat: androidx.camera.core.processing.util.GLUtils$InputFormat valueOf(java.lang.String)
io.flutter.view.TextureRegistry$SurfaceProducer: int getHeight()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader33()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
com.google.maps.android.ui.RotationLayout: RotationLayout(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.googlemaps.Messages$PlatformMapType: io.flutter.plugins.googlemaps.Messages$PlatformMapType[] values()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.window.layout.util.ContextCompatHelperApi30: androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzc(java.lang.String,com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv,long)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzlc: com.google.android.gms.internal.mlkit_vision_mediapipe.zzlc[] values()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: byte[] zze(com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv)
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.view.Surface getSurface()
com.google.android.gms.internal.mlkit_vision_pose_common.zzag: zzag()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv zzd(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: ExtraCroppingQuirk()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.camera.core.impl.CameraCaptureMetaData$AwbState: androidx.camera.core.impl.CameraCaptureMetaData$AwbState valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.camera.video.StreamInfo$StreamState: androidx.camera.video.StreamInfo$StreamState valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.preference.internal.PreferenceImageView: int getMaxHeight()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
io.flutter.plugins.imagepicker.Messages$SourceType: io.flutter.plugins.imagepicker.Messages$SourceType[] values()
androidx.camera.core.impl.CameraCaptureMetaData$AwbMode: androidx.camera.core.impl.CameraCaptureMetaData$AwbMode[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzx(long)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.media3.exoplayer.drm.DrmUtil$Api21: boolean isMediaDrmStateException(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getWidth()
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzg(com.google.android.gms.internal.mlkit_vision_mediapipe.zzgf)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
androidx.camera.video.internal.compat.quirk.CameraUseInconsistentTimebaseQuirk: CameraUseInconsistentTimebaseQuirk()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: long zza()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabledInNative(boolean)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: SharedPreferencesPlugin()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.googlemaps.Messages$PlatformCapType: io.flutter.plugins.googlemaps.Messages$PlatformCapType[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.camera.video.StreamInfo$StreamState: androidx.camera.video.StreamInfo$StreamState[] values()
io.flutter.plugins.imagepicker.Messages$SourceCamera: io.flutter.plugins.imagepicker.Messages$SourceCamera valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$Api31: void setLogSessionIdToMediaCodecFormat(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration,androidx.media3.exoplayer.analytics.PlayerId)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.camera.video.internal.BufferProvider$State: androidx.camera.video.internal.BufferProvider$State[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.google.mlkit.common.sdkinternal.zzh: com.google.mlkit.common.sdkinternal.zzh[] values()
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.google.android.gms.internal.mlkit_acceleration.zzdo: com.google.android.gms.internal.mlkit_acceleration.zzdo[] values()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.camera.camera2.internal.Camera2CameraImpl$InternalState: androidx.camera.camera2.internal.Camera2CameraImpl$InternalState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
androidx.camera.camera2.internal.CaptureSession$State: androidx.camera.camera2.internal.CaptureSession$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType[] values()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
androidx.camera.camera2.internal.compat.quirk.CrashWhenTakingPhotoWithAutoFlashAEModeQuirk: CrashWhenTakingPhotoWithAutoFlashAEModeQuirk()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhw: void zza(com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv)
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzw(long)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.browser.customtabs.CustomTabsIntent$Api24Impl: java.lang.String getDefaultLocale()
androidx.browser.customtabs.CustomTabsIntent$Api34Impl: void setShareIdentityEnabled(android.app.ActivityOptions,boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.camera.video.internal.compat.quirk.StopCodecAfterSurfaceRemovalCrashMediaServerQuirk: StopCodecAfterSurfaceRemovalCrashMediaServerQuirk()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setSubtitle(android.media.MediaDescription$Builder,java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.browser.customtabs.CustomTabsIntent$Api23Impl: android.app.ActivityOptions makeBasicActivityOptions()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer[] values()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void endRearDisplaySession()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
io.flutter.embedding.engine.FlutterJNI: void nativeScheduleFrame(long)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.camera.camera2.internal.compat.quirk.PreviewOrientationIncorrectQuirk: PreviewOrientationIncorrectQuirk()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.camera.lifecycle.LifecycleCamera: void onStart(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary(android.content.Context)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void removeRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
com.google.research.xeno.effect.AssetRegistry: long nativeCreateAssetRegistry()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.camera.video.internal.compat.quirk.MediaStoreVideoCannotWrite: MediaStoreVideoCannotWrite()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id()
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: long zzk(long,java.nio.ByteBuffer,int,int)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzkh: com.google.android.gms.internal.mlkit_vision_mediapipe.zzkh[] values()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.camera.camera2.internal.compat.quirk.TorchIsClosedAfterImageCapturingQuirk: TorchIsClosedAfterImageCapturingQuirk()
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
androidx.media3.exoplayer.audio.DefaultAudioOffloadSupportProvider$Api31: androidx.media3.exoplayer.audio.AudioOffloadSupport getOffloadedPlaybackSupport(android.media.AudioFormat,android.media.AudioAttributes,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzni: com.google.android.gms.internal.mlkit_vision_mediapipe.zzni[] values()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: long zzh(long,float)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.google.android.gms.internal.mlkit_vision_pose_common.zzuf: com.google.android.gms.internal.mlkit_vision_pose_common.zzuf[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.google.android.gms.internal.mlkit_vision_pose_common.zzpp: com.google.android.gms.internal.mlkit_vision_pose_common.zzpp[] values()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.net.Uri getIconUri(android.media.MediaDescription)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
com.google.android.gms.internal.mlkit_vision_pose_common.zzsi: com.google.android.gms.internal.mlkit_vision_pose_common.zzsi[] values()
androidx.preference.PreferenceGroup: PreferenceGroup(android.content.Context,android.util.AttributeSet)
androidx.media3.exoplayer.audio.AudioCapabilities$Api23: com.google.common.collect.ImmutableSet getAllBluetoothDeviceTypes()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
androidx.camera.core.impl.CameraCaptureMetaData$AfState: androidx.camera.core.impl.CameraCaptureMetaData$AfState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
io.flutter.plugins.imagepicker.Messages$CacheRetrievalType: io.flutter.plugins.imagepicker.Messages$CacheRetrievalType[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: FlutterRenderer$ImageReaderSurfaceProducer(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.media3.exoplayer.audio.AudioCapabilities$Api23: boolean isBluetoothConnected(android.media.AudioManager,androidx.media3.exoplayer.audio.AudioDeviceInfoApi23)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhl: long zzh(long,android.graphics.Bitmap)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: long zzp(long)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setTitle(android.media.MediaDescription$Builder,java.lang.CharSequence)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void cleanup()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzk()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
androidx.camera.video.internal.BufferProvider$State: androidx.camera.video.internal.BufferProvider$State valueOf(java.lang.String)
io.flutter.view.TextureRegistry$GLTextureConsumer: android.graphics.SurfaceTexture getSurfaceTexture()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImages()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.camera.core.impl.CameraCaptureFailure$Reason: androidx.camera.core.impl.CameraCaptureFailure$Reason[] values()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: void zzh(long)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.preference.ListPreference: ListPreference(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.camera.core.impl.MetadataHolderService: MetadataHolderService()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void disableFenceForTest()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: android.content.Context getPresentationContext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: java.util.List zzc(com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv,com.google.android.gms.internal.mlkit_vision_mediapipe.zzme)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
androidx.core.os.BuildCompat$Api30Impl: int getExtensionVersion(int)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.flutter.plugins.googlemaps.Messages$PlatformRendererType: io.flutter.plugins.googlemaps.Messages$PlatformRendererType valueOf(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.example.lgtask3.lgtask3.MainActivity: MainActivity()
androidx.camera.camera2.Camera2Config$DefaultProvider: Camera2Config$DefaultProvider()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.camera.core.CameraX$InternalInitState: androidx.camera.core.CameraX$InternalInitState[] values()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
androidx.camera.lifecycle.LifecycleCamera: void onStop(androidx.lifecycle.LifecycleOwner)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.gms.internal.mlkit_vision_pose_common.zzcl: com.google.android.gms.internal.mlkit_vision_pose_common.zzcl[] values()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhu: zzhu(int,byte[])
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
okhttp3.HttpUrl$Builder$ParseResult: okhttp3.HttpUrl$Builder$ParseResult[] values()
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
io.flutter.plugins.googlemaps.Messages$PlatformPatternItemType: io.flutter.plugins.googlemaps.Messages$PlatformPatternItemType[] values()
androidx.camera.camera2.internal.compat.quirk.LegacyCameraSurfaceCleanupQuirk: LegacyCameraSurfaceCleanupQuirk()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzu(long)
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.camera.video.VideoEncoderSession$VideoEncoderState: androidx.camera.video.VideoEncoderSession$VideoEncoderState[] values()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand valueOf(java.lang.String)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
androidx.preference.EditTextPreference: EditTextPreference(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.mlkit_vision_common.zziv: com.google.android.gms.internal.mlkit_vision_common.zziv[] values()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
io.flutter.plugins.googlemaps.Messages$PlatformCapType: io.flutter.plugins.googlemaps.Messages$PlatformCapType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.view.TextureRegistry$SurfaceProducer: int getWidth()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.camera.core.impl.CameraCaptureMetaData$AeState: androidx.camera.core.impl.CameraCaptureMetaData$AeState[] values()
androidx.camera.core.impl.Timebase: androidx.camera.core.impl.Timebase valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: void zze()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: boolean zzh(long,java.nio.ByteBuffer)
io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoRecordEvent: io.flutter.plugins.camerax.GeneratedCameraXLibrary$VideoRecordEvent valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.camera.core.impl.utils.ExifData$WhiteBalanceMode: androidx.camera.core.impl.utils.ExifData$WhiteBalanceMode[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$900(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
io.flutter.plugins.camerax.GeneratedCameraXLibrary$LiveDataSupportedType: io.flutter.plugins.camerax.GeneratedCameraXLibrary$LiveDataSupportedType[] values()
com.ryanheise.just_audio.AudioPlayer$ProcessingState: com.ryanheise.just_audio.AudioPlayer$ProcessingState[] values()
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.startup.InitializationProvider: InitializationProvider()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
android.support.v4.media.MediaDescriptionCompat$Api23Impl: android.net.Uri getMediaUri(android.media.MediaDescription)
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
androidx.camera.camera2.internal.compat.quirk.ConfigureSurfaceToSecondarySessionFailQuirk: ConfigureSurfaceToSecondarySessionFailQuirk()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.camera.video.Recorder$State: androidx.camera.video.Recorder$State[] values()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
io.flutter.plugins.googlemaps.Messages$PlatformRendererType: io.flutter.plugins.googlemaps.Messages$PlatformRendererType[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
io.flutter.plugins.googlemaps.Messages$PlatformJointType: io.flutter.plugins.googlemaps.Messages$PlatformJointType[] values()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.flutter.plugins.sharedpreferences.StringListLookupResultType: io.flutter.plugins.sharedpreferences.StringListLookupResultType valueOf(java.lang.String)
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
androidx.camera.core.ImageProcessingUtil: int nativeWriteJpegToSurface(byte[],android.view.Surface)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void markDirty()
androidx.preference.internal.PreferenceImageView: void setMaxWidth(int)
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.camera.video.internal.compat.quirk.SizeCannotEncodeVideoQuirk: SizeCannotEncodeVideoQuirk()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void maybeWaitOnFence(android.media.Image)
androidx.camera.camera2.internal.compat.quirk.CaptureSessionShouldUseMrirQuirk: CaptureSessionShouldUseMrirQuirk()
io.flutter.plugins.camerax.GeneratedCameraXLibrary$CaptureRequestKeySupportedType: io.flutter.plugins.camerax.GeneratedCameraXLibrary$CaptureRequestKeySupportedType[] values()
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.camera.camera2.internal.compat.quirk.PreviewDelayWhenVideoCaptureIsBoundQuirk: PreviewDelayWhenVideoCaptureIsBoundQuirk()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
androidx.work.NetworkType: androidx.work.NetworkType[] values()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv: zzhv(long)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.google.mlkit.vision.common.internal.VisionCommonRegistrar: VisionCommonRegistrar()
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
androidx.camera.camera2.internal.compat.quirk.CaptureSessionOnClosedNotCalledQuirk: CaptureSessionOnClosedNotCalledQuirk()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void waitOnFence(android.media.Image)
androidx.preference.internal.PreferenceImageView: PreferenceImageView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
io.flutter.plugins.googlemaps.Messages$PlatformMapBitmapScaling: io.flutter.plugins.googlemaps.Messages$PlatformMapBitmapScaling valueOf(java.lang.String)
androidx.camera.video.internal.compat.quirk.AudioTimestampFramePositionIncorrectQuirk: AudioTimestampFramePositionIncorrectQuirk()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: void zzl()
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: int zzb(com.google.android.gms.internal.mlkit_vision_mediapipe.zzhv)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: void zzm(long,com.google.android.gms.internal.mlkit_vision_mediapipe.zzie)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhx: long zzj(long,com.google.android.gms.internal.mlkit_vision_mediapipe.zzib)
androidx.camera.core.ImageProcessingUtil: int nativeRotateYUV(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,java.nio.ByteBuffer,java.nio.ByteBuffer,int,int,int)
androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31: void setLogSessionIdOnMediaDrmSession(android.media.MediaDrm,byte[],androidx.media3.exoplayer.analytics.PlayerId)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer valueOf(java.lang.String)
io.flutter.view.TextureRegistry$ImageConsumer: android.media.Image acquireLatestImage()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.camera.core.impl.Config$OptionPriority: androidx.camera.core.impl.Config$OptionPriority valueOf(java.lang.String)
com.csdcorp.speech_to_text.ListenMode: com.csdcorp.speech_to_text.ListenMode valueOf(java.lang.String)
io.flutter.plugins.googlemaps.GoogleMapsPlugin: GoogleMapsPlugin()
androidx.camera.camera2.internal.compat.quirk.RepeatingStreamConstraintForVideoRecordingQuirk: RepeatingStreamConstraintForVideoRecordingQuirk()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhy: int zzf(long)
androidx.preference.DropDownPreference: DropDownPreference(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: double deltaMillis(long)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void startRearDisplayPresentationSession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.camera.video.internal.audio.AudioSource$InternalState: androidx.camera.video.internal.audio.AudioSource$InternalState[] values()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.camera.camera2.internal.compat.quirk.ExtraSupportedOutputSizeQuirk: ExtraSupportedOutputSizeQuirk()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
kotlin.collections.AbstractList: AbstractList()
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
androidx.preference.PreferenceCategory: PreferenceCategory(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.media3.exoplayer.ExoPlayerImpl$Api23: void registerAudioDeviceCallback(android.media.AudioManager,android.media.AudioDeviceCallback,android.os.Handler)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.media3.exoplayer.ExoPlayerImpl$Api31: androidx.media3.exoplayer.analytics.PlayerId registerMediaMetricsListener(android.content.Context,androidx.media3.exoplayer.ExoPlayerImpl,boolean,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getDescription(android.media.MediaDescription)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
androidx.preference.TwoStatePreference: TwoStatePreference(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.camera.camera2.internal.Camera2CameraImpl$InternalState: androidx.camera.camera2.internal.Camera2CameraImpl$InternalState[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.work.CoroutineWorker: CoroutineWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: zzhp()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.common.base.Function: java.lang.Object apply(java.lang.Object)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.media.MediaDescription build(android.media.MediaDescription$Builder)
androidx.camera.video.internal.compat.quirk.ReportedVideoQualityNotSupportedQuirk: ReportedVideoQualityNotSupportedQuirk()
androidx.camera.video.internal.encoder.EncoderImpl$InternalState: androidx.camera.video.internal.encoder.EncoderImpl$InternalState[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
io.flutter.plugins.googlemaps.Messages$PlatformMapType: io.flutter.plugins.googlemaps.Messages$PlatformMapType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.google.android.gms.internal.mlkit_vision_mediapipe.zzhp: long zza()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void removeRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.google.common.collect.AbstractMultimap: AbstractMultimap()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.camera.core.impl.CameraCaptureMetaData$AwbState: androidx.camera.core.impl.CameraCaptureMetaData$AwbState[] values()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.camera.lifecycle.LifecycleCamera: void onDestroy(androidx.lifecycle.LifecycleOwner)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
androidx.camera.video.VideoOutput$SourceState: androidx.camera.video.VideoOutput$SourceState valueOf(java.lang.String)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.camera.core.ImageProcessingUtil$Result: androidx.camera.core.ImageProcessingUtil$Result valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.media3.common.AudioAttributes$Api29: void setAllowedCapturePolicy(android.media.AudioAttributes$Builder,int)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
com.google.research.xeno.effect.AssetRegistry: void nativeRegisterAsset(long,java.lang.String,java.lang.String)
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
androidx.fragment.app.DialogFragment: DialogFragment()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setDescription(android.media.MediaDescription$Builder,java.lang.CharSequence)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
